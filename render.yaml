# render.yaml - Render Blueprint
# https://render.com/docs/blueprint-spec

envVarGroups:
  - name: hotel-secrets
    envVars:
      - key: POSTGRES_DB_URL
        value: ""
      - key: MONGO_URL
        value: ""
      - key: GEMINI_API_KEY
        value: ""
      - key: REACT_APP_GOOGLE_MAPS_API_KEY
        value: ""
      - key: JWT_SECRET
        value: ""
      - key: GEMINI_API_URL
        value: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent"
      - key: NODE_OPTIONS
        value: "--tls-min-v1.2"

services:
  - name: redis
    type: redis
    plan: free

  - name: rabbitmq
    type: pserv
    plan: starter
    image:
      url: rabbitmq:3.9-management-alpine

  - name: hotel-admin-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-admin-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  - name: hotel-search-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-search-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString

  - name: hotel-booking-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-booking-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: RABBITMQ_URL
        value: amqp://rabbitmq:5672

  - name: hotel-comments-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-comments-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  - name: notification-service
    type: pserv
    env: docker
    dockerfilePath: ./services/notification-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: RABBITMQ_URL
        value: amqp://rabbitmq:5672

  - name: ai-agent-service
    type: pserv
    env: docker
    dockerfilePath: ./services/ai-agent-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  - name: api-gateway
    type: web
    env: docker
    plan: starter
    dockerfilePath: ./api-gateway/Dockerfile
    dockerContext: .
    healthCheckPath: /

  - name: frontend
    type: web
    plan: starter
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: REACT_APP_GOOGLE_MAPS_API_KEY
    args:
      REACT_APP_GOOGLE_MAPS_API_KEY: ${REACT_APP_GOOGLE_MAPS_API_KEY} 