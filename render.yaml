# render.yaml - Hotel Booking System için Render Blueprint

envVarGroups:
  - name: hotel-secrets
    envVars:
      - key: POSTGRES_DB_URL
        value: ""
      - key: MONGO_URL
        value: ""
      - key: GEMINI_API_KEY
        value: ""
      - key: REACT_APP_GOOGLE_MAPS_API_KEY
        value: ""
      - key: JWT_SECRET
        value: ""
      - key: GEMINI_API_URL
        value: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent"
      - key: NODE_OPTIONS
        value: "--tls-min-v1.2"

services:
  # 1. Redis (Public IP allow list eklenmiş)
  - name: redis
    type: redis
    plan: free
    ipAllowList:
      - source: 0.0.0.0/0

  # 2. RabbitMQ (Özelleştirilmiş Dockerfile ile çalıştırılacak)
  - name: rabbitmq
    type: pserv
    env: docker
    plan: starter
    dockerfilePath: ./services/rabbitmq/Dockerfile
    dockerContext: .

  # 3. Backend Microservices
  - name: hotel-admin-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-admin-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  - name: hotel-search-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-search-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString

  - name: hotel-booking-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-booking-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: RABBITMQ_URL
        value: amqp://rabbitmq:5672

  - name: hotel-comments-service
    type: pserv
    env: docker
    dockerfilePath: ./services/hotel-comments-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  - name: notification-service
    type: pserv
    env: docker
    dockerfilePath: ./services/notification-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
      - key: RABBITMQ_URL
        value: amqp://rabbitmq:5672

  - name: ai-agent-service
    type: pserv
    env: docker
    dockerfilePath: ./services/ai-agent-service/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets

  # 4. Public Web Services
  - name: api-gateway
    type: web
    env: docker
    plan: starter
    dockerfilePath: ./api-gateway/Dockerfile
    dockerContext: .
    healthCheckPath: /
    envVars:
      - fromGroup: hotel-secrets

  - name: frontend
    type: web
    env: docker
    plan: starter
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hotel-secrets
